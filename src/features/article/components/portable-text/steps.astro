---
import { PortableText } from 'astro-portabletext';
import type { PortableTextProps, Block } from 'astro-portabletext/types';

import { portableTextComponents } from './config';

export type StepItem = {
  title: string;
  content: PortableTextProps['value'];
};

export type HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6;

export type StepsBlock = {
  _type: 'steps';
  items: StepItem[];
  headingLevel: HeadingLevel;
};

type Props = {
  node: StepsBlock;
};

const { node } = Astro.props;

const items = node.items;
const headingLevel = node.headingLevel;

// Transform each step's title into a PortableText heading block
const transformedItems = items.map((item) => {
  const titleBlock: Block = {
    _type: 'block',
    style: `h${headingLevel}`,
    children: [{ _type: 'span', text: item.title }],
  };

  return {
    titleAndContent: [
      titleBlock,
      ...(Array.isArray(item.content) ? item.content : [item.content]),
    ],
  };
});
---

{
  transformedItems.length > 0 && (
    <div class="fd-steps">
      {transformedItems.map((item) => (
        <div class="fd-step">
          <PortableText
            value={item.titleAndContent}
            components={portableTextComponents}
          />
        </div>
      ))}
    </div>
  )
}
