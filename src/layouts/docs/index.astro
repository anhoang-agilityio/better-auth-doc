---
import { DocsNavigation, type DocsNavigationCategory } from './navigation';

import type { MetadataType } from '@/components/utils/metadata';
import { paths } from '@/config/paths';
import { getCategoriesWithArticles } from '@/features/category/api/get-categories-with-articles';
import Base from '@/layouts/base/base.astro';

type Props = {
  metadata: MetadataType;
};

const { metadata } = Astro.props;

const categoriesFromCms = await getCategoriesWithArticles();

async function fetchSvg(url?: string | null): Promise<string | null> {
  try {
    if (!url) return null;
    const res = await fetch(url);
    if (!res.ok) return null;
    const text = await res.text();
    return text || null;
  } catch {
    return null;
  }
}

const categories: DocsNavigationCategory[] = await Promise.all(
  categoriesFromCms.map(async (category) => {
    const categoryIconSvg = await fetchSvg(category.icon);

    const items = await Promise.all(
      category.items.map(async (item) => ({
        title: item.title,
        href: paths.docs.getHref(item.slug),
        iconSvg: await fetchSvg(item.icon),
      })),
    );

    return {
      id: category.id,
      title: category.title,
      iconSvg: categoryIconSvg,
      items,
    } satisfies DocsNavigationCategory;
  }),
);

const currentPath = Astro.url.pathname;
---

<Base metadata={metadata}>
  <Fragment slot="mobile-nav">
    <DocsNavigation
      client:visible
      categories={categories}
      currentPath={currentPath}
    />
  </Fragment>
  <div class="flex">
    <aside
      class="hidden shrink-0 flex-col justify-between overflow-y-auto border-r pb-2 md:flex md:w-[268px] md:transition-all lg:w-[286px]"
    >
      <DocsNavigation
        client:visible
        categories={categories}
        currentPath={currentPath}
      />
    </aside>
    <main class="col-span-12 md:col-span-8 lg:col-span-9">
      <slot />
    </main>
  </div>
</Base>
