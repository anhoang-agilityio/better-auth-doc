---
import { DocsNavigation, type DocsNavigationCategory } from './navigation';

import type { MetadataType } from '@/components/utils/metadata';
import { paths } from '@/config/paths';
import { getCategoriesWithArticles } from '@/features/category/api/get-categories-with-articles';
import Base from '@/layouts/base/index.astro';
import { fetchSvg } from '@/utils/data';

type Props = {
  metadata: MetadataType;
};

const { metadata } = Astro.props;

const categoriesFromCms = await getCategoriesWithArticles();

const categories: DocsNavigationCategory[] = await Promise.all(
  categoriesFromCms.map(async (category) => {
    const categoryIconSvg = await fetchSvg(category.icon);

    // Process direct articles (without subgroup)
    const articles = await Promise.all(
      category.articles.map(async (item) => ({
        title: item.title,
        href: paths.docs.getHref(item.slug),
        iconSvg: await fetchSvg(item.icon),
      })),
    );

    // Process subgroups and their articles
    const subgroups = await Promise.all(
      category.subgroups.map(async (subgroup) => {
        const subgroupArticles = await Promise.all(
          subgroup.articles.map(async (item) => ({
            title: item.title,
            href: paths.docs.getHref(item.slug),
            iconSvg: await fetchSvg(item.icon),
          })),
        );

        return {
          id: subgroup.id,
          title: subgroup.title,
          articles: subgroupArticles,
        };
      }),
    );

    return {
      id: category.id,
      title: category.title,
      iconSvg: categoryIconSvg,
      articles,
      subgroups,
    } satisfies DocsNavigationCategory;
  }),
);

const currentPath = Astro.url.pathname;
---

<Base metadata={metadata}>
  <Fragment slot="mobile-nav">
    <DocsNavigation
      client:visible
      categories={categories}
      currentPath={currentPath}
    />
  </Fragment>
  <div
    class="grid grid-flow-col grid-cols-[auto_1fr_auto] grid-rows-[auto_1fr] xl:grid-rows-[0fr_1fr]"
  >
    <aside
      class="sticky top-[var(--nav-height)] row-span-2 hidden h-[calc(100dvh-var(--nav-height))] border-r pb-2 md:flex md:w-[268px] md:transition-all lg:w-[286px]"
    >
      <DocsNavigation
        client:visible
        categories={categories}
        currentPath={currentPath}
      />
    </aside>
    <div
      class="sticky top-[var(--nav-height)] z-10 col-start-2 row-start-1 h-fit xl:hidden"
    >
      <slot name="toc-mobile" />
    </div>
    <main class="col-start-2 row-start-2 overflow-auto">
      <slot name="article" />
    </main>
    <aside
      class="sticky top-[var(--nav-height)] col-start-3 row-span-2 h-fit max-xl:hidden"
    >
      <slot name="toc-desktop" />
    </aside>
  </div>
</Base>
